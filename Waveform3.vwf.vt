// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "12/24/2023 12:28:35"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          prueba7493
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module prueba7493_vlg_vec_tst();
// constants                                           
// general purpose registers
reg ENCENDIDO;
reg RESET;
reg RESTA;
reg SUMA;
// wires                                               
wire LedRojo;
wire LedVerde;
wire OA;
wire OAA;
wire OB;
wire OBB;
wire OC;
wire OCC;
wire OD;
wire ODD;
wire OE;
wire OEE;
wire OF;
wire OFF;
wire OG;
wire OGG;

// assign statements (if any)                          
prueba7493 i1 (
// port map - connection between master ports and signals/registers   
	.ENCENDIDO(ENCENDIDO),
	.LedRojo(LedRojo),
	.LedVerde(LedVerde),
	.OA(OA),
	.OAA(OAA),
	.OB(OB),
	.OBB(OBB),
	.OC(OC),
	.OCC(OCC),
	.OD(OD),
	.ODD(ODD),
	.OE(OE),
	.OEE(OEE),
	.OF(OF),
	.OFF(OFF),
	.OG(OG),
	.OGG(OGG),
	.RESET(RESET),
	.RESTA(RESTA),
	.SUMA(SUMA)
);
initial 
begin 
#1000000 $finish;
end 

// ENCENDIDO
initial
begin
	ENCENDIDO = 1'b1;
	ENCENDIDO = #80000 1'b0;
	ENCENDIDO = #70000 1'b1;
	# 30000;
	repeat(13)
	begin
		ENCENDIDO = 1'b0;
		ENCENDIDO = #30000 1'b1;
		# 30000;
	end
	ENCENDIDO = 1'b0;
	ENCENDIDO = #30000 1'b1;
end 

// RESET
initial
begin
	RESET = 1'b1;
	RESET = #80000 1'b0;
	RESET = #70000 1'b1;
	RESET = #450000 1'b0;
	RESET = #75000 1'b1;
	RESET = #300000 1'b0;
end 

// RESTA
initial
begin
	RESTA = 1'b0;
	RESTA = #670000 1'b1;
	# 20000;
	repeat(7)
	begin
		RESTA = 1'b0;
		RESTA = #20000 1'b1;
		# 20000;
	end
	RESTA = 1'b0;
	RESTA = #20000 1'b1;
end 

// SUMA
initial
begin
	repeat(25)
	begin
		SUMA = 1'b0;
		SUMA = #12500 1'b1;
		# 12500;
	end
	SUMA = 1'b0;
end 
endmodule

